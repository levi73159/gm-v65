MEMORY
{
  ZP:         start =    $0, size =  $100, type   = rw, define = yes;
  RAM:        start =  $200, size = $3DFF, define = yes;
  VIA:        start = $6000, size = $000F, define = yes;
  ROM:        start=$8000, size=$8000, type=ro, define=yes, fill=yes,   fillval=$00, file=%O;
}

SEGMENTS
{
  ZEROPAGE:  load=ZP,        type=zp,  define=yes;
  DATA:      load=ROM,       type=rw,  define=yes, run=RAM;
  BSS:       load=RAM,       type=bss, define=yes;
  HEAP:      load=RAM,       type=bss, define=yes, optional=yes;
  STARTUP:   load=ROM,       type=ro;
  ONCE:      load=ROM,       type=ro, optional=yes;
  CODE:      load=ROM,       type=ro;
  RODATA:    load=ROM,       type=ro;
  VECTORS:   load=ROM,       type=ro,  define=yes,   offset=$7ffa, optional=yes;
}
FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSTART__:  value = $0100, type = weak;
    __STACKSIZE__:  value = $0200, type = weak;
}
